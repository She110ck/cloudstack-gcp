---
- hosts: all
  become: yes
  vars:
    hostname: cstack-single
    gcp: true
  tasks:
    - name: upgrade all packages
      yum: name=* state=latest
      when: 0 > 1

    - name: install packages
      become: true
      yum:
        state: present
        name: 
          - yum-plugin-fastestmirror
          - epel-release
          - git
          - bridge-utils
          - net-tools
          - telnet
          - tcpdump
          - htop
          - ntp
          - nfs-utils
          - wget
          - nginx

    - name: copy network changes
      become: true
      copy:
        src: ./templates/
        dest: /etc/sysconfig/network-scripts
        owner: root
        group: root
        mode: 0644

    - name: stop NetworkManager
      ansible.builtin.systemd:
        name: NetworkManager
        state: stopped
        enabled: no


    - name: add hostname to /etc/hosts
      lineinfile:
        dest: /etc/hosts
        line:  "{{ansible_default_ipv4.address }} {{hostname}}"
        state: present
      when: gcp is not defined

    - name: restart network
      ansible.builtin.systemd:
        name: network
        state: restarted
        daemon_reload: yes
        enabled: yes

    - name: put selinux in permissive mode
      selinux:
        policy: targeted
        state: permissive

    - name: configure NTP
      ansible.builtin.systemd:
        name: ntpd
        state: started
        enabled: yes

    - name: add cloudstack package repository
      become: true
      copy:
        src: ./static/cloudstack.repo
        dest: /etc/yum.repos.d/cloudstack.repo
        mode: 0644
    
    - name: nfs configure
      blockinfile:
        dest: /etc/exports
        block: |
          /export/secondary *(rw,async,no_root_squash,no_subtree_check)
          /export/primary *(rw,async,no_root_squash,no_subtree_check)
    
    - name: create nfs dirs
      file:
        path: "{{ item }}"
        state: directory
        owner: root
        group: root
        mode: 0755
      with_items: 
        - "/export/primary"
        - "/export/secondary"

    - name: add domain name
      lineinfile:
        dest: /etc/idmapd.conf
        line: "Domain = {{hostname}}"
        state: present
    
    - name: nfs configure 2
      blockinfile:
        dest: /etc/sysconfig/nfs
        state: present
        block: |
          LOCKD_TCPPORT=32803
          LOCKD_UDPPORT=32769
          MOUNTD_PORT=892
          RQUOTAD_PORT=875
          STATD_PORT=662
          STATD_OUTGOING_PORT=2020

    - name: disable firewall
      ansible.builtin.systemd:
        name: firewalld
        state: stopped
        enabled: no

    - name: enable rpcbind for nfs
      ansible.builtin.systemd:
        name: rpcbind
        state: started
        enabled: yes

    - name: enable nfs
      ansible.builtin.systemd:
        name: nfs
        state: started
        enabled: yes
    
    - name: install mysql repo
      yum: 
        name: http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpm
        state: present

    - name: install mysql server
      yum:
        state: present
        name: 
          - mysql-server
          - mysql-connector-python

    - name: configure mysql
      blockinfile:
        dest: /etc/my.cnf
        block: |
          innodb_rollback_on_timeout=1
          innodb_lock_wait_timeout=600
          max_connections=350
          log-bin=mysql-bin
          binlog-format = 'ROW'

    - name: enable mysql
      ansible.builtin.systemd:
        name: mysqld
        state: started
        enabled: yes

    - name: install cloudstack management
      yum:
        state: present
        name: cloudstack-management

    - name: Upgrade all packages
      yum:
        name: '*'
        state: latest

    - name: configure cloudstack db
      become: true
      shell: cloudstack-setup-databases cloud:password@localhost --deploy-as=root
      register: result

    - name: setup management
      become: true
      shell: cloudstack-setup-management
    
    - name: system template setup
      become: true
      shell: >
        /usr/share/cloudstack-common/scripts/storage/secondary/cloud-install-sys-tmplt -m 
        /export/secondary -u 
        http://download.cloudstack.org/systemvm/4.16/systemvmtemplate-4.16.0-kvm.qcow2.bz2 
        -h kvm -F

    - name: install cloudstack-agent
      yum:
        state: present
        name: 
          - cloudstack-agent
          - epel-release

    - name: qemu configuration
      lineinfile:
        dest: /etc/libvirt/qemu.conf
        line: 'vnc_listen = "0.0.0.0"'
        state: present

    - name: libvirt config
      blockinfile:
        dest: /etc/libvirt/libvirtd.conf
        state: present
        block: |
          listen_tls = 0
          listen_tcp = 1
          tcp_port = "16509"
          auth_tcp = "none"
          mdns_adv = 0
    
    - name: libvirt listen arg
      replace:
        dest: /etc/sysconfig/libvirtd
        regexp: '^#LIBVIRTD_ARGS="--listen"$'
        replace: 'LIBVIRTD_ARGS="--listen"'

    - name: restart libvirt
      ansible.builtin.systemd:
        name: libvirtd
        state: restarted
    
    - name: configure cloudstack agent
      replace:
        dest: /etc/cloudstack/agent/agent.properties
        regexp: '^#\s?private.network.device\s?=\s?cloudbr1$'
        replace: "private.network.device=cloudbr0"

    - name: generate uuid for agent
      shell: uuidgen
      register: uuid_result
      tags:
        - problem
    
    - name: set guid for agent
      replace:
        dest: /etc/cloudstack/agent/agent.properties
        regexp: '^guid=$'
        replace: "guid={{uuid_result['stdout']}}"
      tags:
        - problem

    - name: ssh config change
      blockinfile:
        dest: /etc/ssh/sshd_config
        block: |
          UseDNS no

    - name: ssh permit root
      replace:
        dest: /etc/ssh/sshd_config
        regexp: 'PermitRootLogin no'
        replace: "PermitRootLogin yes"
      register: var_ssh_warn

    - name: ssh password auth
      replace:
        dest: /etc/ssh/sshd_config
        regexp: 'PasswordAuthentication no'
        replace: "PasswordAuthentication yes"
    

    - debug:
        msg: "WARNING! ENABLED ROOT SSH LOGIN!"
      when: var_ssh_warn
    
    - name: ssh restart
      ansible.builtin.systemd:
        name: sshd
        state: restarted

    - name: replace nginx config
      replace:
        dest: /etc/nginx/nginx.conf
        regexp: '^(\s+)root         /usr/share/nginx/html;$'
        replace: '        location / { proxy_pass http://0.0.0.0:8080;}'

    - name: restart nginx
      ansible.builtin.systemd:
        name: nginx
        state: restarted
        enabled: yes
